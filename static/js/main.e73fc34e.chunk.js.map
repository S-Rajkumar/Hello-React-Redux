{"version":3,"sources":["App.js","actions/index.js","reducers/counter.js","reducers/isLogged.js","reducers/index.js","index.js"],"names":["App","counter","useSelector","state","isLogged","dispatch","useDispatch","className","onClick","type","steps","sing_in","counterReducer","action","loggedReducer","allReducers","combineReducers","store","createStore","allReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAqBeA,MAhBf,WACE,IAAMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,WACrCG,EAAWF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YACtCC,EAAWC,cACjB,OACE,sBAAKC,UAAU,MAAf,UACE,mDACA,4CAAeN,KAFjB,IAEgC,OAC9B,wBAAQO,QAAY,kBAAMH,ECZrB,CACHI,KAAM,YACNC,MDU2C,KAA7C,eAHF,IAGiE,OAC/D,wBAAQF,QAAY,kBAAMH,ECNrB,CACHI,KAAM,YACNC,MDI2C,KAA7C,eAJF,IAIiE,OAC/D,wBAAQF,QAAY,kBAAMH,ECDT,SAACJ,GACpB,MAAO,CACHQ,KAAM,UACNR,QAASA,GDFwBU,CAAQV,KAA3C,yBACCG,EAAW,mDAA6B,O,OELhCQ,EAXQ,WAAwB,IAAvBT,EAAsB,uDAAd,EAAGU,EAAW,uCAC1C,OAAOA,EAAOJ,MACV,IAAK,YACD,OAAON,EAAQU,EAAOH,MAC1B,IAAK,YACD,OAAOP,EAAQU,EAAOH,MAC1B,QACI,OAAOP,ICEJW,EATO,WAA4B,IAA3BX,EAA0B,wDAAXU,EAAW,uCAC7C,OAAOA,EAAOJ,MACV,IAAK,UACD,OAA0B,KAAnBI,EAAOZ,QAClB,QACI,OAAOE,ICIJY,EALKC,YAAgB,CAChCf,QAASW,EACTR,SAAUU,ICIRG,EAAQC,YACZC,GAIFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.e73fc34e.chunk.js","sourcesContent":["import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {decrement, increment, sing_in} from './actions';\n\n\nfunction App() {\n  const counter = useSelector(state => state.counter);\n  const isLogged = useSelector(state => state.isLogged);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"App\">\n      <h1>Hello React Redux</h1>\n      <h3>counter : {counter}</h3> {'\\u00A0'}\n      <button onClick = { () => dispatch(increment(3))} >+</button> {'\\u00A0'}\n      <button onClick = { () => dispatch(decrement(2))} >-</button> {'\\u00A0'}\n      <button onClick = { () => dispatch(sing_in(counter))}>Try Sing In</button>\n      {isLogged ? <h2>!!! Thank You !!!</h2> : ''}\n    </div>\n  );\n}\n\nexport default App;\n","export const increment = (steps) => {\r\n    return {\r\n        type: \"INCREMENT\",\r\n        steps: steps\r\n    };\r\n};\r\n\r\nexport const decrement = (steps) => {\r\n    return {\r\n        type: \"DECREMENT\",\r\n        steps: steps\r\n    };\r\n};\r\n\r\nexport const sing_in = (counter) => {\r\n    return {\r\n        type: \"SIGN_IN\",\r\n        counter: counter\r\n    };\r\n};","const counterReducer = (state = 0, action) => {\r\n    switch(action.type) {\r\n        case 'INCREMENT' :\r\n            return state + action.steps;\r\n        case 'DECREMENT' :\r\n            return state - action.steps;\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;","const loggedReducer = (state = false, action) => {\r\n    switch(action.type) {\r\n        case 'SIGN_IN' :\r\n            return action.counter === 33 ? true : false ;\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default loggedReducer;","import  counterReducer from './counter';\r\nimport loggedReducer from './isLogged';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    counter: counterReducer,\r\n    isLogged: loggedReducer\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport allReducer from './reducers';\n\nconst store = createStore(\n  allReducer,\n  //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}